@startuml
hide empty members

' Remove the following lines when VLBI, PSS and PST
' are added to CDM
remove VLBIConfiguration
remove PSTConfiguration
remove PSSConfiguration

set separator none 
package ska_tmc_cdm.messages.subarray_node.configure {
	package csp <<Rectangle>> {
	    class SubarrayConfiguration {
	        subarray_name: str
	    }

	    class CommonConfiguration {
	        config_id: str
            frequency_band: core.ReceiverBand
            subarray_id: int
            band_5_tuning: List[float]
	    }

	    class CBFConfiguration {
            vlbi: dict
	    }

		enum FSPFunctionMode {
			CORR
			PSS-BF
			PST-BF
			VLBI
		}

		class FSPConfiguration {
			fsp_ids : [int]
			integration_factor : int
			output_link_map : List[Tuple]
			sdp_start_channel_id : int
			output_host : List[int]
			output_port : List[]
		}

		class PSTScanConfiguration {
			activation_time: str
			bits_per_sample: int
			num_of_polarizations: int
			udp_nsamp: int
			wt_nsamp: int
			udp_nchan: int
			num_frequency_channels: int
			centre_frequency: float
			total_bandwidth: float
			observation_mode: str
			observer_id: str
			project_id: str
			pointing_id: str
			source: str
			itrf: List[float]
			receiver_id: str
			feed_polarization: str
			feed_handedness: int
			feed_angle: float
			feed_tracking_mode: str
			feed_position_angle: float
			oversampling_ratio: List[int]
			coordinates: PSTScanCoordinates
			max_scan_length: float
			subint_duration: float
			receptors: List[str]
			receptor_weights: List[float]
			num_channelization_stages: int
			channelization_stages: List[PSTChannelizationStageConfiguration]
		}

		class PSTBeamConfiguration {
			beam_id: int
            scan: Optional[PSTScanConfiguration]
		}

		class PSTScanCoordinates {
			equinox: float
			ra: str
			dec: str
		}

		class PSTChannelizationStageConfiguration {
			num_filter_taps: int
			filter_coefficients: List[float]
			num_frequency_channels: int
			oversampling_ratio: List[int]
		}

		class PSTConfiguration {
			beams: List[PSTBeamConfiguration]
		}

		class CSPConfiguration {
	        interface: str
	        pss: dict
	        pst: Optional[PSTConfiguration | dict]

		}

		class LowCBFConfiguration {
			stations: StationConfiguration 
			vis: VisConfiguration
			timing_beams: TimingBeamsConfiguration
		}

		class TimingBeamsConfiguration {
			fsp: VisFspConfiguration
			beams: [List[BeamsConfiguration]]
		}

		class BeamsConfiguration {
			pst_beam_id: int
			stn_beam_id: int
			stn_weights: float = None
		}

		class StationConfiguration {
			stns: List[List[int]]
        	stn_beams: List[StnBeamConfiguration]
		}
		
		class StnBeamConfiguration {
			stn_beam_id: int
			freq_ids: List[int]
			host: [List[Tuple[int, str]]]
			port: [List[Tuple[int, int, int]]]
			mac: [List[Tuple[int, str]]]
			integration_ms: [int]
		}

		class VisConfiguration {
			fsp: VisFspConfiguration
			stn_beams: List[StnBeamConfiguration]
		}

		class VisFspConfiguration {
			function_mode: [str]
			fsp_ids: [List[int]]
		}

		CBFConfiguration *-- "*" FSPConfiguration
		CSPConfiguration *-- "1" CommonConfiguration
		CSPConfiguration *-- "1" SubarrayConfiguration
		CSPConfiguration *-- "0..1" CBFConfiguration
		CSPConfiguration *-- "1" LowCBFConfiguration
		CSPConfiguration *-- "1" PSTConfiguration
		PSTConfiguration *-- "1" PSTBeamConfiguration
		PSTBeamConfiguration *-- "1" PSTScanConfiguration
		PSTScanConfiguration *-- "1" PSTChannelizationStageConfiguration
		PSTScanConfiguration *-- "1" PSTScanCoordinates
		LowCBFConfiguration *-- "1" StationConfiguration
		LowCBFConfiguration *-- "1" VisConfiguration
		LowCBFConfiguration *-- "1" TimingBeamsConfiguration
		TimingBeamsConfiguration *-- "1" VisFspConfiguration
		TimingBeamsConfiguration *-- "1" BeamsConfiguration
		VisConfiguration *-- "1" VisFspConfiguration
		VisConfiguration *-- "*" StnBeamConfiguration
		StationConfiguration *-- "*" StnBeamConfiguration
	}	
}
@enduml