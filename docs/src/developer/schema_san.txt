@startuml
!pragma useNewPackage
hide empty members

package ska.cdm.messages.subarray_node {
	package scan.py <<Rectangle>> {
		class ScanRequest
	}

	package configure {
		package core.py <<Rectangle>> {
			class Target
			class PointingConfiguration
			class DishConfiguration
		}

		package csp.py <<Rectangle>> {
			class FSPConfiguration
			class CSPConfiguration
		}

		package sdp.py <<Rectangle>> {
			class SDPConfiguration
		}

		package tmc.py <<Rectangle>> {
			class TMCConfiguration
		}

		package ~__init__.py {
			class ConfigureRequest
		}
	}
}

package ska.cdm.schemas.subarray_node {
	package scan.py as P1 <<Rectangle>> {
		class ScanRequestSchema
	}

	package configure as P2 {
		package core.py as P3 {
			class TargetSchema
			class PointingSchema
			class DishConfigurationSchema
			class ConfigureRequestSchema

			note left of TargetSchema
				This maps a ""Target""
				used in the context of
				a dish pointing
			end note

		}

		package csp.py as P4 {
			class FSPConfigurationSchema
			class CSPConfigurationSchema
		}

		package sdp.py as P5 {
			class SDPConfigurationSchema
		}

		package tmc.py as P6 {
			class TMCConfigurationSchema
		}
	}
}

ScanRequestSchema --- ScanRequest

TargetSchema --- Target
PointingSchema --- PointingConfiguration
DishConfigurationSchema --- DishConfiguration
ConfigureRequestSchema --- ConfigureRequest

FSPConfigurationSchema --- FSPConfiguration
CSPConfigurationSchema --- CSPConfiguration

SDPConfigurationSchema --- SDPConfiguration

TMCConfigurationSchema --- TMCConfiguration

note as N1
	These classes map the same Python
	class to different JSON representations
	as required by the target systems
end note
N1 ------ TargetSchema
@enduml
